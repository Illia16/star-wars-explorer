{"version":3,"sources":["Components/MainResults.js"],"names":["MainResults","props","searchQuery","states","switchPage","next","results","previous","nextPage","split","pop","previousPage","variant","component","align","className","map","entity","key","name","to","pathname","data","title","onClick"],"mappings":"gIAAA,6FAgGeA,UAjFK,SAACC,GAAW,IACZC,EAA+BD,EAAxCE,OAASD,YAAgBE,EAAeH,EAAfG,WAK1BC,EAAOJ,EAAME,OAAOG,QAAQJ,GAAaG,KACzCE,EAAWN,EAAME,OAAOG,QAAQJ,GAAaK,SAG7CC,EAAWH,EAAOA,EAAKI,MAAM,IAAIC,MAAQ,KACzCC,EAAeJ,EAAWA,EAASE,MAAM,IAAIC,MAAQ,KAE3D,OACI,oCACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYE,QAAQ,KAAKC,UAAU,KAAKC,MAAM,UAC7CZ,KAMCG,IAASE,GACX,kBAAC,IAAD,CAAYK,QAAQ,KAAKC,UAAU,KAAKC,MAAM,UAA9C,OACSZ,EADT,kBAMJ,kBAAC,IAAD,CAAMa,UAAU,WAERd,EAAME,OAAOG,QAAQJ,GAAaI,QAAQU,KAAI,SAACC,GAC3C,MACoB,WAAhBf,EACA,kBAAC,IAAD,CAAUgB,IAAKD,EAAOE,MAClB,kBAAC,IAAD,CAASC,GAAI,CAAEC,SAAS,WAAD,OAAaJ,EAAOE,MAAQG,KAAM,CAACrB,WAAWgB,EAAOE,OAE9D,UAAhBjB,EACF,kBAAC,IAAD,CAAWgB,IAAKD,EAAOM,OACnB,kBAAC,IAAD,CAASH,GAAI,CAAEC,SAAS,UAAD,OAAYJ,EAAOM,OAASD,KAAM,CAACrB,WAAYgB,EAAOM,QAE/D,YAAhBrB,EACF,kBAAC,IAAD,CAAUgB,IAAKD,EAAOE,MAClB,kBAAC,IAAD,CAASC,GAAI,CAAEC,SAAS,YAAD,OAAcJ,EAAOE,MAAQG,KAAM,CAACrB,WAAYgB,EAAOE,OAEhF,SAUdd,EACI,yBAAKU,UAAU,iBACTR,GAAY,kBAAC,IAAD,CAAQiB,QAAU,kBAAMpB,EAAWF,EAAaS,KAAhD,iBACd,kBAAC,IAAD,CAAQa,QAAU,kBAAMpB,EAAWF,EAAaM,KAAhD,cAEND,EACE,yBAAKQ,UAAU,iBACX,kBAAC,IAAD,CAAQS,QAAU,kBAAMpB,EAAWF,EAAaS,KAAhD,kBAELN,GAAQE,EACP,yBAAKQ,UAAU,iBACX,kBAAC,IAAD,CAAQS,QAAU,kBAAMpB,EAAWF,EAAaS,KAAhD,iBACA,kBAAC,IAAD,CAAQa,QAAU,kBAAMpB,EAAWF,EAAaM,KAAhD,cAEJ,KAIR,yBAAKO,UAAU,kBACX,kBAAC,IAAD,CAASK,GAAG,KAAZ","file":"static/js/8.20987be1.chunk.js","sourcesContent":["// React\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// Material UI\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from'@material-ui/core/AppBar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport 'fontsource-roboto';\r\n\r\n// My Sass styles\r\nimport \"../styles/app.scss\";\r\n\r\nconst MainResults = (props) => {\r\n    const {states:{ searchQuery },  switchPage } = props;\r\n\r\n    // figuring out wheather there's more pages for more results (more than 10 entities)\r\n\r\n    // strings for next/previous pages from API\r\n    const next = props.states.results[searchQuery].next;\r\n    const previous = props.states.results[searchQuery].previous;\r\n\r\n    // getting a previous/next page number from the strings. If no page, then null\r\n    const nextPage = next ? next.split('').pop() : null;\r\n    const previousPage = previous ? previous.split('').pop() : null;\r\n\r\n    return(\r\n        <>\r\n            <AppBar>\r\n                <Typography variant=\"h1\" component=\"h1\" align=\"center\" >\r\n                {searchQuery}\r\n                </Typography>\r\n            </AppBar>\r\n            \r\n            {/* checking if there's only 1 page for results (10 or less entities based on the API structure) */}\r\n            {\r\n                (!next && !previous) &&\r\n                <Typography variant=\"h2\" component=\"h2\" align=\"center\" >\r\n                    All {searchQuery} are displayed\r\n                </Typography>\r\n            }\r\n            \r\n            {/* getting a list of entities (people || films || planets), based on the user selection */}\r\n            <List className=\"subList\">\r\n                {\r\n                    props.states.results[searchQuery].results.map((entity) => {\r\n                        return (\r\n                            searchQuery === \"people\" ?\r\n                            <ListItem key={entity.name} >\r\n                                <NavLink to={{ pathname: `/people/${entity.name}`, data: {props} }}>{entity.name}</NavLink>\r\n                            </ListItem>\r\n                            : searchQuery === \"films\" ?\r\n                            <ListItem  key={entity.title}>\r\n                                <NavLink to={{ pathname: `/films/${entity.title}`, data: {props} }} >{entity.title}</NavLink>\r\n                            </ListItem>\r\n                            : searchQuery === \"planets\" ?\r\n                            <ListItem key={entity.name}>\r\n                                <NavLink to={{ pathname: `/planets/${entity.name}`, data: {props} }} >{entity.name}</NavLink>\r\n                            </ListItem>\r\n                            : null\r\n                        )\r\n                    })\r\n                }\r\n            </List>\r\n            \r\n            {/* after the fist api call, looking at the API results wheather there is next/previous pages available; rendering(or not) button \"Next page\" if there's more than 10 entiries in the results  */}\r\n            {/* rendering \"Previous page\" only when \"Next page\" is clicked so that there's an API call made to get the next 10 results */}\r\n            {/* Clicking \"Next page\" or \"Previous page\" makes a corresponding API call after which new results are rendered*/}\r\n            {\r\n                next ?\r\n                    <div className=\"nextPrevPages\">\r\n                        { previous && <Button onClick={ () => switchPage(searchQuery, previousPage) } >Previous page</Button> }\r\n                        <Button onClick={ () => switchPage(searchQuery, nextPage) }>Next page</Button>\r\n                    </div>\r\n                : previous ?\r\n                    <div className=\"nextPrevPages\">\r\n                        <Button onClick={ () => switchPage(searchQuery, previousPage) }>Previous page</Button> \r\n                    </div>\r\n                : (next && previous) ?\r\n                    <div className=\"nextPrevPages\">\r\n                        <Button onClick={ () => switchPage(searchQuery, previousPage) }>Previous page</Button> \r\n                        <Button onClick={ () => switchPage(searchQuery, nextPage) }>Next page</Button>\r\n                    </div>\r\n                :   null\r\n            }\r\n\r\n            {/* Back to main menu link */}\r\n            <div className=\"goToUpperLevel\">\r\n                <NavLink to=\"/\">Back to main menu</NavLink>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainResults;"],"sourceRoot":""}