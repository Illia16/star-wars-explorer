{"version":3,"sources":["../node_modules/@material-ui/core/esm/AppBar/AppBar.js","../node_modules/@material-ui/core/esm/Paper/Paper.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/Card/Card.js","Components/SubResults.js"],"names":["AppBar","React","props","ref","classes","className","_props$color","color","_props$position","position","other","_objectWithoutProperties","Paper","_extends","square","component","elevation","clsx","root","concat","capitalize","withStyles","theme","backgroundColorDefault","palette","type","grey","display","flexDirection","width","boxSizing","zIndex","appBar","flexShrink","positionFixed","top","left","right","positionAbsolute","positionSticky","positionStatic","positionRelative","colorDefault","backgroundColor","getContrastText","colorPrimary","primary","main","contrastText","colorSecondary","secondary","colorInherit","colorTransparent","name","_props$component","Component","_props$square","_props$elevation","_props$variant","variant","outlined","rounded","elevations","shadows","forEach","shadow","index","boxShadow","background","paper","text","transition","transitions","create","borderRadius","shape","border","divider","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variantMapping","variantMapping","margin","typography","caption","button","overline","srOnly","height","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorTextPrimary","colorTextSecondary","colorError","error","displayInline","displayBlock","Card","_props$raised","raised","SubResults","state","results","loadingErrorMsg","searchQuery","this","location","data","states","axios","url","method","params","search","match","then","res","setState","catch","response","statusText","length","List","ListItem","mass","hair_color","skin_color","gender","birth_year","title","director","producer","release_date","terrain","population","WaitingLogo","to"],"mappings":"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","file":"static/js/5.eb85d539.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  var backgroundColorDefault = theme.palette.type === 'light' ? theme.palette.grey[100] : theme.palette.grey[900];\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      boxSizing: 'border-box',\n      // Prevent padding issue with the Modal and fixed positioned AppBar.\n      zIndex: theme.zIndex.appBar,\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `position=\"fixed\"`. */\n    positionFixed: {\n      position: 'fixed',\n      top: 0,\n      left: 'auto',\n      right: 0,\n      '@media print': {\n        // Prevent the app bar to be visible on each printed page.\n        position: 'absolute'\n      }\n    },\n\n    /* Styles applied to the root element if `position=\"absolute\"`. */\n    positionAbsolute: {\n      position: 'absolute',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"sticky\"`. */\n    positionSticky: {\n      // ⚠️ sticky is not supported by IE 11.\n      position: 'sticky',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"static\"`. */\n    positionStatic: {\n      position: 'static'\n    },\n\n    /* Styles applied to the root element if `position=\"relative\"`. */\n    positionRelative: {\n      position: 'relative'\n    },\n\n    /* Styles applied to the root element if `color=\"default\"`. */\n    colorDefault: {\n      backgroundColor: backgroundColorDefault,\n      color: theme.palette.getContrastText(backgroundColorDefault)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"transparent\"`. */\n    colorTransparent: {\n      backgroundColor: 'transparent',\n      color: 'inherit'\n    }\n  };\n};\nvar AppBar = /*#__PURE__*/React.forwardRef(function AppBar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$position = props.position,\n      position = _props$position === void 0 ? 'fixed' : _props$position,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"position\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    square: true,\n    component: \"header\",\n    elevation: 4,\n    className: clsx(classes.root, classes[\"position\".concat(capitalize(position))], classes[\"color\".concat(capitalize(color))], className, position === 'fixed' && 'mui-fixed'),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AppBar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary', 'transparent']),\n\n  /**\n   * The positioning type. The behavior of the different options is described\n   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).\n   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.\n   */\n  position: PropTypes.oneOf(['absolute', 'fixed', 'relative', 'static', 'sticky'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAppBar'\n})(AppBar);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: chainPropTypes(PropTypes.number, function (props) {\n    var classes = props.classes,\n        elevation = props.elevation; // in case `withStyles` fails to inject we don't need this warning\n\n    if (classes === undefined) {\n      return null;\n    }\n\n    if (elevation != null && classes[\"elevation\".concat(elevation)] === undefined) {\n      return new Error(\"Material-UI: This elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","// React\r\nimport React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// Material UI\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from'@material-ui/core/AppBar';\r\nimport WaitingLogo from '../styles/WaitingLogo';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Card from '@material-ui/core/Card';\r\nimport 'fontsource-roboto';\r\n\r\n// My Sass styles\r\nimport \"../styles/app.scss\";\r\n\r\nclass SubResults extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            results: [],\r\n            loadingErrorMsg: null,\r\n        }\r\n    }\r\n\r\n    // getting data from global props that were passed in MainResults.js\r\n    // based on that making an api call for a specific entiry(e.g. speficic person, planet, movie)\r\n    componentDidMount() {\r\n        const {location:{ data: { props: { states: { searchQuery } }} } } = this.props;\r\n        axios({\r\n            url: `https://swapi.dev/api/${searchQuery}/`,\r\n            method: 'GET',\r\n            params: {\r\n                search: this.props.match.params[searchQuery + \"ID\"],\r\n            },\r\n        })\r\n        .then( (res) => {\r\n            this.setState({\r\n                results: res.data.results,\r\n            })\r\n        })\r\n        .catch( error => {\r\n            //saving error msg from API in state for further use\r\n            this.setState({\r\n                loadingErrorMsg: error.response.statusText\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {location:{ data: { props: { states: { searchQuery } }} } } = this.props;\r\n\r\n        return(\r\n            <>\r\n                <AppBar>\r\n                    <Typography variant=\"h1\" component=\"h1\" align=\"center\" >\r\n                        {searchQuery}\r\n                    </Typography>\r\n                </AppBar>\r\n\r\n                {/* Below, rendering individual information of the entiry based on the search query (people || films || planets)  */}\r\n                {\r\n                searchQuery === \"people\" && this.state.results.length ?     \r\n                    <Card>\r\n                        <List>\r\n                            <Typography variant=\"h2\" component=\"h2\" align=\"center\" >\r\n                                {this.state.results[0].name}\r\n                            </Typography>\r\n\r\n                            <ListItem>\r\n                                Height: {this.state.results[0].height}\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                Mass: {this.state.results[0].mass}\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                Hair color: {this.state.results[0].hair_color}\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                Skin Color: {this.state.results[0].skin_color}\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                Gender: {this.state.results[0].gender}\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                Birth year: {this.state.results[0].birth_year}\r\n                            </ListItem>\r\n                        </List>\r\n                    </Card>\r\n                : searchQuery === \"films\" && this.state.results.length ?\r\n                    <Card>\r\n                        <List>\r\n                            <Typography variant=\"h2\" component=\"h2\" align=\"center\" >\r\n                                {this.state.results[0].title}\r\n                            </Typography>\r\n                            <ListItem>Director: {this.state.results[0].director}</ListItem>\r\n                            <ListItem>Producer: {this.state.results[0].producer}</ListItem>\r\n                            <ListItem>Release date: {this.state.results[0].release_date}</ListItem>\r\n                        </List>\r\n                    </Card>\r\n                : searchQuery === \"planets\" && this.state.results.length ?       \r\n                    <Card>\r\n                        <List>\r\n                            <Typography variant=\"h2\" component=\"h2\" align=\"center\" >\r\n                                {this.state.results[0].name}\r\n                            </Typography>\r\n                            <ListItem>Terrain: {this.state.results[0].terrain}</ListItem>\r\n                            <ListItem>Population: {this.state.results[0].population}</ListItem>\r\n                        </List>\r\n                    </Card>\r\n                : <WaitingLogo></WaitingLogo>\r\n                }\r\n                \r\n                {/* back to all ( people || films || planets)  link */}\r\n                { (searchQuery && this.state.results.length) &&\r\n                <div className=\"goToUpperLevel\">\r\n                    <NavLink to={`/${searchQuery}`} >Back to all {searchQuery}</NavLink>\r\n                </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubResults;"],"sourceRoot":""}